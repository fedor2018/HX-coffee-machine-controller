//<App !Start!>
/*
Pb - P boiler steam 0-2.5 Bar
Pw - P water pump   0-19  Bar
Te - T in E61       0-120 *C
Tb - T boiler       0-110 *C
t  - timer          0-99  sec
L  - flow           0-200 ml
-----------
давление в бойлере - 1/4"
давление в магистрали - 1/8" тройник
расход воды - трубка d4x7 Q>100
//<App !End!>


SmallFont - 6x8
MediumNumbers - 12x16
BigNumbers - 14x24
*/
#include <Wire.h>
#include <OLED.h>
#include <Fonts/FreeSerif9pt7b.h>
#include <max6675.h>
#include <math.h>
#include <MedianFilter.h>
#include <ESP8266TimerInterrupt.h>
#include <ESP8266_ISR_Timer.h>
#include <ESP8266WiFi.h>
#include <ESP8266mDNS.h>
#include <WiFiUdp.h>
#include <ArduinoOTA.h>

//#define SERIAL 1 //debug serial
#define MAX_BOILER	60//psi
//#define MAX_WATER 300	//psi
#define Q_WATER	2016 	//Pulse/liter
#define P_REG	0.8		//Bar -> 93*C

#define VIN  (220+51)/51 //1v->5v
#define PUMP_ON  13      //gpio13
#define PRESS_ON 1      //gpio1 tx
#define SSR_PIN  0      //gpio0
#define PBEEP    15 	//gpio15
#define PBOILER  A0     //adc 
#define LWATER	 2	    //gpio2
#define SSR_ON   LOW
#define SSR_OFF  HIGH
#define SDA      4
#define SCL      5 
#define LED      3      //rx

int thermoDO = 12;//gpio12
int thermoCLK = 16;//gpio16
int TeCS = 14;//gpio14

MAX6675 Te61(thermoCLK, TeCS, thermoDO);
OLED  display(SDA, SCL);
MedianFilter Te_filter(10);
ESP8266Timer Timer1;

float Tb=-99.9;
float Te=-99.9;
float Pb=0;//Pboiler Bar
float Lw=0;//Lwater mL
#define TIMER1 5000 //timer int 5ms
#define TBLINK 1000000/TIMER1 //1sec
volatile char halfsec=0;//seconds counter
volatile unsigned int pump=0;//pump status
volatile unsigned int press=0;//pressostat status
volatile unsigned int flow=0;//flow counter
bool is_90=false;//over 90*C

void IRAM_ATTR TimingISR();

void beeper(int t=1000, char i=1){//ms
	while (i--){
		digitalWrite(PBEEP, HIGH);
		delay(t);
		digitalWrite(PBEEP, LOW);
		delay(t);
	}
}

void setup(){
#ifdef SERIAL
  Serial.begin(115200);
  delay(10);
  Serial.print("start\r\n");
#endif
    ESP.wdtEnable(WDTO_8S);

//-------------    
    pinMode(SSR_PIN, OUTPUT);
    digitalWrite(SSR_PIN, SSR_OFF);
    pinMode(PBEEP, OUTPUT);
    digitalWrite(PBEEP, LOW);
    pinMode (LED, OUTPUT);  
    digitalWrite(LED, HIGH);
    pinMode (PUMP_ON, INPUT_PULLUP);
    pinMode (PRESS_ON, INPUT_PULLUP);
    display.display();
    delay(500);
    display.setFont(&FreeSerif9pt7b);
    display.clearDisplay();
    Timer1.attachInterruptInterval(TIMER1, TimingISR);//1ms
    digitalWrite(LED, LOW);
    pinMode(PUMP_ON, INPUT_PULLUP);//INT0
    attachInterrupt(PUMP_ON, pumpISR, FALLING );
    attachInterrupt(PRESS_ON, pressISR, FALLING ); //3
    interrupts();
}

void loop(){
  Te = (float)Te_filter.process(Te61.readCelsius());
  if(isnan (Te))Te=-99;
	Pb=pressure(analogRead(PBOILER),MAX_BOILER);
	if(Pb>=0 && Pb<P_REG){
		digitalWrite(SSR_PIN, SSR_ON);
	}else{
		digitalWrite(SSR_PIN, SSR_OFF);
	}
  if(pump){//pump on
		if(halfsec==0)flow=0;
  }else{
		halfsec=0;
  }
  pump=0;
	Lw=flow2ml(flow);
	if(press){//pressostat on
	}
	press=0;

//  display.setFont();

//	display.update();
	if(Te>90 && is_90==false){
		is_90=true;
		beeper(500,3);
	}else{
  	delay(200);
  }
  ESP.wdtFeed();
}

void pumpISR(){
  pump++;
}

void pressISR(){
  press++;
}

void IRAM_ATTR TimingISR(){
	static int hcnt=TBLINK;
	static char spump=1;
	static char spress=1;
	static char sflow=1;
	
	if(hcnt++<=0){//1sec
		hcnt=TBLINK;
	  if(pump){
	    if(++halfsec>99)halfsec=0;
	  }
	  digitalWrite( LED, digitalRead( LED ) ^ 1 );
  }

  if(digitalRead(PUMP_ON)==LOW){//сработал датчик
  	if(spump==1){//только 1 за период
  		spump=0;
  		pump++;
  	}
  }else{
  	spump=1;
  }

  if(digitalRead(PRESS_ON)==LOW){//сработал датчик
  	if(spress==1){//только 1 за период
  		spress=0;
  		press++;
  	}
  }else{
  	spress=1;
  }

  if(digitalRead(LWATER)==LOW){//сработал датчик
  	if(sflow==1){//только 1 за период
  		sflow=0;
  		flow++;
  	}
  }else{
  	sflow=1;
  }
}

float flow2ml(int cnt){//counter to mL
	return cnt * Q_WATER/1000;
}

float psi2bar(float psi){
	return (psi/14.5037738);//1 Bar = 14,5037738 Psi
}

float pressure(int adcval,int max){//adc->bar
	float p;   
  p = ((float)(adcval*VIN/1024.0)); 
  if (p < 0.1){//short
  	p = -98;//
  }else if(p> 4.8){//no sensor
  	p=-99;
  }else{
  	p-=0.5;
  	p*=(max/4.0);//psi
  	p=psi2bar(p);//bar
  }
  return p;
}
/*
Input: 0-60 psi(Gauge Pressure);
Output: 0.5-4.5V linear voltage output. 0 psi outputs 0.5V, 30 psi outputs 2.5V, 60 psi outputs 4.5V.
Input: 0-300 psi(Gauge Pressure);
Output: 0.5-4.5V linear voltage output. 0 psi outputs 0.5V, 150 psi outputs 2.5V, 300 psi outputs 4.5V.

Accuracy: +/-0.5%FS;
Thread: 1/8” NPT;
Wiring Connector: Packard plug-in unit is included;
Wiring: Red: +5V; Black: ground; Green: signal output;
Overload Capacity: 2-4 times;
Working Temperature: -40—+120ºC;
Compensation Temperature: -20—+80ºC;
*/

//<Checkbox Callback !Start!>
//<Checkbox Callback !End!>
//<Keypad Callback !Start!>
//<Keypad Callback !End!>
//<Spinner Callback !Start!>
//<Spinner Callback !End!>
//<Listbox Callback !Start!>
//<Listbox Callback !End!>
